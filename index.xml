<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Homepage on DATA 1030</title>
    <link>https://data1030.github.io/</link>
    <description>Recent content in Homepage on DATA 1030</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 29 Oct 2017 03:33:48 -0700</lastBuildDate>
    
	<atom:link href="https://data1030.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Music ETL</title>
      <link>https://data1030.github.io/assignment/project/music-etl/</link>
      <pubDate>Sun, 29 Oct 2017 03:33:48 -0700</pubDate>
      
      <guid>https://data1030.github.io/assignment/project/music-etl/</guid>
      <description>Music Music Data Around Us Possible datasets:
 Million Song Dataset - Audio Features Spotify - General Last.fm Billboard Youtube Twitter Reddit Google Trends Blogs Critics Sales  Cleaning the data  Typos everwhere: social media, billboard charts Extracting features from tweets, comments, reviews  Before We Overwork Ourselves  How well do we need to merge the data? What kind of questions are we going to ask?  Putting it together  Different album spellings, different artist formats LastFM popularity vs Spotify popularity vs Twitter  Loading the data  Do we need a staging area?</description>
    </item>
    
    <item>
      <title>Fake Reviews</title>
      <link>https://data1030.github.io/assignment/project/amazon-reviews/</link>
      <pubDate>Thu, 05 Oct 2017 03:17:08 -0700</pubDate>
      
      <guid>https://data1030.github.io/assignment/project/amazon-reviews/</guid>
      <description>You can download the notebook over here.
Motivation Can we trust Amazon reviews? If Walmart were to have a review system as good as Yelp&amp;rsquo;s, would it be able to push back against Amazon?
Getting the data public datasets web scraping - legality  Initial Exploration: The orbital shaker Some people can get away with blatantly fake reviews. How can we combat this? Why hasn&amp;rsquo;t Amazon filtered out the easy pickings?</description>
    </item>
    
    <item>
      <title>Algorithmic Trading</title>
      <link>https://data1030.github.io/assignment/project/algo-trading/</link>
      <pubDate>Thu, 21 Sep 2017 15:12:58 -0700</pubDate>
      
      <guid>https://data1030.github.io/assignment/project/algo-trading/</guid>
      <description>Create Your Strategy Types of stategies  momentum baseline etc.  How much risk can you bear? What are the buying and selling fees?
Analyze  download historical data or use an API backtest check for overfitting use charts  Improve  more advanced methods  Halfway through the assignment: the game begins Submit your code. Through some interface, you can see how your model(s) are performing on the current market compared to your classmates.</description>
    </item>
    
    <item>
      <title>Intro to Data Science</title>
      <link>https://data1030.github.io/assignment/lab/intro/</link>
      <pubDate>Fri, 08 Sep 2017 03:17:08 -0700</pubDate>
      
      <guid>https://data1030.github.io/assignment/lab/intro/</guid>
      <description>Here&amp;rsquo;s an intro assignment I&amp;rsquo;ve been working on using a dataset from kaggle.
Lab: Intro to Pandas and the Data Science Process Due: 6/15/2016
Prompt: TBD
Part 0: Overview In this assignment, you will learn how to use the Python Data Analysis Library (pandas) to transform, analyze, and visualize data. Begin below by importing the relevant modules. Be sure to delete or comment out the
raise NotImplementedError()  statements.</description>
    </item>
    
    <item>
      <title>Syllabus</title>
      <link>https://data1030.github.io/document/course/syllabus/</link>
      <pubDate>Thu, 29 Jun 2017 07:03:48 -0700</pubDate>
      
      <guid>https://data1030.github.io/document/course/syllabus/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Regex</title>
      <link>https://data1030.github.io/document/notes/regex/</link>
      <pubDate>Wed, 28 Jun 2017 15:11:53 -0700</pubDate>
      
      <guid>https://data1030.github.io/document/notes/regex/</guid>
      <description>This was downloaded from a Jupyter notebook. Markdown downloads seem to work better than HTML downloads.
Regular Expressions More powerful and concise than the built-in string functions in most programming languages, regular expressions can be useful time-savers for many data cleaning tasks involving strings.
Definition A regular expression (also called regex or regexp) is a sequence of characters that define a search pattern. Usually this pattern is then used by string searching algorithms for &amp;ldquo;find&amp;rdquo; or &amp;ldquo;find and replace&amp;rdquo; operations on strings.</description>
    </item>
    
    <item>
      <title>Calendar</title>
      <link>https://data1030.github.io/calendar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://data1030.github.io/calendar/</guid>
      <description>Embed a public calendar here. It can contain office hours, lab times, deadlines, and other types of events.</description>
    </item>
    
    <item>
      <title>Detailed Schedule</title>
      <link>https://data1030.github.io/schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://data1030.github.io/schedule/</guid>
      <description>Todo:
 Links in schedule.yml Github repository for notebooks
  Week Date Topic Part 1 Part 2 Lab     1 9/7 Overview  Intro to Data Science I  What is data science? Math and CS in data science The data science process, multiple interpretations A real-world example    Intro to Data Science II and Course Logistics  Summarizing the example: the data scientist&#39;s skillset Types of data scientists Recent applications Course logistics   Intro to data science w/ Jupyter and pandas   Module 1: Computer Science   2 9/12 CS Review  Basic CS Primer  Computational complexity Data structures  List, tuple, set, dictionary Stack, queue, heap, BST, priority queue Graphs: adjacency list, matrix Hashing  Algorithms  Sorting: insertion, selection, heap, quicksort, merge sort Search: BFS, DFS, binary search, string algorithms      Common technologies  APIs HTML Javascript File Formats Text encodings  CS in data science  Linear programming B+ trees Dataframe    Getting Data from Spotify   2 9/14 Hardware   CPUs Threads Cache and main memory Networking Disk storage  Latency numbers   Business costs I     GPUs Power supply Modern processors in ML  FPGAs ASICs: TPUs  Business costs II   GPU Computing: Implementing a MLE   Module 2: Data Science Crash Course   3 9/19 ML Crash Course  Unsupervised ML   Dimensionality reduction: PCA Clustering: kmeans to spectral Real-world applications  Dimensionality reduction: visualization Clustering: customer segmentation, data exploration     Supervised ML   Classification overview Regression overview Generalization error  Bias-variance Overfitting  Real-world applications  Fraud detection Document classification    Classifying Iris Flowers   3 9/21 ML in Practice  Validation and Feature Engineering I   Training/Test Error Cross Validation ROC and AUC Regularization Feature selection  Correlation Mutual information Similarity Number of features Selection algorithms     Feature Engineering II   Feature transformation  Binning n-grams Non-linear transformations  Feature extraction   Detecting Fake Reviews   4 9/26 Data Exploration  Context and Simple Statistics in Practice  Business/Domain Knowledge Other contextual info Intro Statistics Knowledge Applied Correlation Distributions Plotting    Exploration w/ ML  Segmentation analysis Deviation analysis Relationships between variables      4 9/28 Data Preparation  Tedious Cleaning  Single source: Misspellings, missing values, duplicates Multiple source: Date format conflicts, schema design, overlapping data, etc.</description>
    </item>
    
  </channel>
</rss>